
======== New step ========

======== ThreadID: 2========
ExecutionStack:
Ref(int) v;
new(v, 23);
print (*(v));
*(v) = 24;
print (*(v) + 5);

SymbolTable:

FileTable:

OutputTable:

Heap:

======== ThreadID: 2========
ExecutionStack:
new(v, 23);
print (*(v));
*(v) = 24;
print (*(v) + 5);

SymbolTable:
v -> (0x0, int)

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 2========
ExecutionStack:
new(v, 23);
print (*(v));
*(v) = 24;
print (*(v) + 5);

SymbolTable:
v -> (0x0, int)

FileTable:

OutputTable:

Heap:

======== ThreadID: 2========
ExecutionStack:
print (*(v));
*(v) = 24;
print (*(v) + 5);

SymbolTable:
v -> (0x1, int)

FileTable:

OutputTable:

Heap:
1 -> 23

======== New step ========

======== ThreadID: 2========
ExecutionStack:
print (*(v));
*(v) = 24;
print (*(v) + 5);

SymbolTable:
v -> (0x1, int)

FileTable:

OutputTable:

Heap:
1 -> 23

======== ThreadID: 2========
ExecutionStack:
*(v) = 24;
print (*(v) + 5);

SymbolTable:
v -> (0x1, int)

FileTable:

OutputTable:
23

Heap:
1 -> 23

======== New step ========

======== ThreadID: 2========
ExecutionStack:
*(v) = 24;
print (*(v) + 5);

SymbolTable:
v -> (0x1, int)

FileTable:

OutputTable:
23

Heap:
1 -> 23

======== ThreadID: 2========
ExecutionStack:
print (*(v) + 5);

SymbolTable:
v -> (0x1, int)

FileTable:

OutputTable:
23

Heap:
1 -> 24

======== New step ========

======== ThreadID: 2========
ExecutionStack:
print (*(v) + 5);

SymbolTable:
v -> (0x1, int)

FileTable:

OutputTable:
23

Heap:
1 -> 24

======== ThreadID: 2========
ExecutionStack:

SymbolTable:
v -> (0x1, int)

FileTable:

OutputTable:
23
29

Heap:
1 -> 24


======== New step ========

======== ThreadID: 2========
ExecutionStack:
int v;
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:

FileTable:

OutputTable:

Heap:

======== ThreadID: 2========
ExecutionStack:
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 2========
ExecutionStack:
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:

Heap:

======== ThreadID: 2========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 2========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 2========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 2========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 3========
ExecutionStack:
print (v + 23);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 2========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 3========
ExecutionStack:

SymbolTable:
v -> 2

FileTable:

OutputTable:
25

Heap:

======== New step ========

======== ThreadID: 2========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 2========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== New step ========

======== ThreadID: 2========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 4========
ExecutionStack:
print (v + 23);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 2========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 4========
ExecutionStack:

SymbolTable:
v -> 1

FileTable:

OutputTable:
25
24

Heap:

======== New step ========

======== ThreadID: 2========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 2========
ExecutionStack:
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== New step ========

======== ThreadID: 2========
ExecutionStack:
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 2========
ExecutionStack:

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24
0

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
int v;
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 2========
ExecutionStack:
print (v + 23);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 2========
ExecutionStack:

SymbolTable:
v -> 2

FileTable:

OutputTable:
25

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 1========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 3========
ExecutionStack:
print (v + 23);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 3========
ExecutionStack:

SymbolTable:
v -> 1

FileTable:

OutputTable:
25
24

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 1========
ExecutionStack:
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 1========
ExecutionStack:

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24
0

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
int v;
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 2========
ExecutionStack:
print (v + 23);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 2========
ExecutionStack:

SymbolTable:
v -> 2

FileTable:

OutputTable:
25

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 1========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 3========
ExecutionStack:
print (v + 23);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 3========
ExecutionStack:

SymbolTable:
v -> 1

FileTable:

OutputTable:
25
24

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 1========
ExecutionStack:
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 1========
ExecutionStack:

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24
0

Heap:

======== New step ========

======== ThreadID: 2========
ExecutionStack:
int v;
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:

FileTable:

OutputTable:

Heap:

======== ThreadID: 2========
ExecutionStack:
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 2========
ExecutionStack:
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:

Heap:

======== ThreadID: 2========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 2========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 2========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 2========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 3========
ExecutionStack:
print (v + 23);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 2========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 3========
ExecutionStack:

SymbolTable:
v -> 2

FileTable:

OutputTable:
25

Heap:

======== New step ========

======== ThreadID: 2========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 2========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== New step ========

======== ThreadID: 2========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 4========
ExecutionStack:
print (v + 23);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 2========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 4========
ExecutionStack:

SymbolTable:
v -> 1

FileTable:

OutputTable:
25
24

Heap:

======== New step ========

======== ThreadID: 2========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 2========
ExecutionStack:
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== New step ========

======== ThreadID: 2========
ExecutionStack:
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 2========
ExecutionStack:

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24
0

Heap:

======== New step ========

======== ThreadID: 5========
ExecutionStack:
int v;
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:

FileTable:

OutputTable:

Heap:

======== ThreadID: 5========
ExecutionStack:
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 5========
ExecutionStack:
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:

Heap:

======== ThreadID: 5========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 5========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 5========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 5========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 6========
ExecutionStack:
print (v + 23);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 5========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 6========
ExecutionStack:

SymbolTable:
v -> 2

FileTable:

OutputTable:
25

Heap:

======== New step ========

======== ThreadID: 5========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 5========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== New step ========

======== ThreadID: 5========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 7========
ExecutionStack:
print (v + 23);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 5========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 7========
ExecutionStack:

SymbolTable:
v -> 1

FileTable:

OutputTable:
25
24

Heap:

======== New step ========

======== ThreadID: 5========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 5========
ExecutionStack:
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== New step ========

======== ThreadID: 5========
ExecutionStack:
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 5========
ExecutionStack:

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24
0

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
int v;
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 2========
ExecutionStack:
print (v + 23);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 2========
ExecutionStack:

SymbolTable:
v -> 2

FileTable:

OutputTable:
25

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 1========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 3========
ExecutionStack:
print (v + 23);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 3========
ExecutionStack:

SymbolTable:
v -> 1

FileTable:

OutputTable:
25
24

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 1========
ExecutionStack:
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 1========
ExecutionStack:

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24
0

Heap:

======== New step ========

======== ThreadID: 2========
ExecutionStack:
int v;
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:

FileTable:

OutputTable:

Heap:

======== ThreadID: 2========
ExecutionStack:
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 2========
ExecutionStack:
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:

Heap:

======== ThreadID: 2========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 2========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 2========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 2========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 3========
ExecutionStack:
print (v + 23);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 2========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 3========
ExecutionStack:

SymbolTable:
v -> 2

FileTable:

OutputTable:
25

Heap:

======== New step ========

======== ThreadID: 2========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 2========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== New step ========

======== ThreadID: 2========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 4========
ExecutionStack:
print (v + 23);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 2========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 4========
ExecutionStack:

SymbolTable:
v -> 1

FileTable:

OutputTable:
25
24

Heap:

======== New step ========

======== ThreadID: 2========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 2========
ExecutionStack:
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== New step ========

======== ThreadID: 2========
ExecutionStack:
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 2========
ExecutionStack:

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24
0

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
int v;
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 2========
ExecutionStack:
print (v + 23);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 2========
ExecutionStack:

SymbolTable:
v -> 2

FileTable:

OutputTable:
25

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 1========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 3========
ExecutionStack:
print (v + 23);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 3========
ExecutionStack:

SymbolTable:
v -> 1

FileTable:

OutputTable:
25
24

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 1========
ExecutionStack:
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 1========
ExecutionStack:

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24
0

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
int v;
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 2========
ExecutionStack:
print (v + 23);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 2========
ExecutionStack:

SymbolTable:
v -> 2

FileTable:

OutputTable:
25

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 1========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 3========
ExecutionStack:
print (v + 23);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 3========
ExecutionStack:

SymbolTable:
v -> 1

FileTable:

OutputTable:
25
24

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 1========
ExecutionStack:
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 1========
ExecutionStack:

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24
0

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
int v;
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 2========
ExecutionStack:
print (v + 23);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 2========
ExecutionStack:

SymbolTable:
v -> 2

FileTable:

OutputTable:
25

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 1========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 3========
ExecutionStack:
print (v + 23);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 3========
ExecutionStack:

SymbolTable:
v -> 1

FileTable:

OutputTable:
25
24

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 1========
ExecutionStack:
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 1========
ExecutionStack:

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24
0

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
int v;
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 2========
ExecutionStack:
print (v + 23);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 2========
ExecutionStack:

SymbolTable:
v -> 2

FileTable:

OutputTable:
25

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
int v;
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
for (v = 2; v > 0; v = v - 1) {
	fork
(
print (v + 23);
)
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 2========
ExecutionStack:
print (v + 23);

SymbolTable:
v -> 2

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 2========
ExecutionStack:

SymbolTable:
v -> 2

FileTable:

OutputTable:
25

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 1========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
v = v - 1;
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 3========
ExecutionStack:
print (v + 23);

SymbolTable:
v -> 1

FileTable:

OutputTable:
25

Heap:

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 3========
ExecutionStack:

SymbolTable:
v -> 1

FileTable:

OutputTable:
25
24

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
while (v > 0) {
	fork
(
print (v + 23);
)
v = v - 1;
}
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 1========
ExecutionStack:
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
print (v);

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24

Heap:

======== ThreadID: 1========
ExecutionStack:

SymbolTable:
v -> 0

FileTable:

OutputTable:
25
24
0

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
int a;
int b;
int c;
a = 1;
b = 2;
c = 5;
switch(a * 10)
case (b * c) 
{
print (a);
print (b);
}
case (10) 
{
print (100);
print (200);
}
default
{
print (300);
}
print (300);

SymbolTable:

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
int b;
int c;
a = 1;
b = 2;
c = 5;
switch(a * 10)
case (b * c) 
{
print (a);
print (b);
}
case (10) 
{
print (100);
print (200);
}
default
{
print (300);
}
print (300);

SymbolTable:
a -> 0

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
int b;
int c;
a = 1;
b = 2;
c = 5;
switch(a * 10)
case (b * c) 
{
print (a);
print (b);
}
case (10) 
{
print (100);
print (200);
}
default
{
print (300);
}
print (300);

SymbolTable:
a -> 0

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
int c;
a = 1;
b = 2;
c = 5;
switch(a * 10)
case (b * c) 
{
print (a);
print (b);
}
case (10) 
{
print (100);
print (200);
}
default
{
print (300);
}
print (300);

SymbolTable:
a -> 0
b -> 0

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
int c;
a = 1;
b = 2;
c = 5;
switch(a * 10)
case (b * c) 
{
print (a);
print (b);
}
case (10) 
{
print (100);
print (200);
}
default
{
print (300);
}
print (300);

SymbolTable:
a -> 0
b -> 0

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
a = 1;
b = 2;
c = 5;
switch(a * 10)
case (b * c) 
{
print (a);
print (b);
}
case (10) 
{
print (100);
print (200);
}
default
{
print (300);
}
print (300);

SymbolTable:
a -> 0
b -> 0
c -> 0

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
a = 1;
b = 2;
c = 5;
switch(a * 10)
case (b * c) 
{
print (a);
print (b);
}
case (10) 
{
print (100);
print (200);
}
default
{
print (300);
}
print (300);

SymbolTable:
a -> 0
b -> 0
c -> 0

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
b = 2;
c = 5;
switch(a * 10)
case (b * c) 
{
print (a);
print (b);
}
case (10) 
{
print (100);
print (200);
}
default
{
print (300);
}
print (300);

SymbolTable:
a -> 1
b -> 0
c -> 0

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
b = 2;
c = 5;
switch(a * 10)
case (b * c) 
{
print (a);
print (b);
}
case (10) 
{
print (100);
print (200);
}
default
{
print (300);
}
print (300);

SymbolTable:
a -> 1
b -> 0
c -> 0

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
c = 5;
switch(a * 10)
case (b * c) 
{
print (a);
print (b);
}
case (10) 
{
print (100);
print (200);
}
default
{
print (300);
}
print (300);

SymbolTable:
a -> 1
b -> 2
c -> 0

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
c = 5;
switch(a * 10)
case (b * c) 
{
print (a);
print (b);
}
case (10) 
{
print (100);
print (200);
}
default
{
print (300);
}
print (300);

SymbolTable:
a -> 1
b -> 2
c -> 0

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
switch(a * 10)
case (b * c) 
{
print (a);
print (b);
}
case (10) 
{
print (100);
print (200);
}
default
{
print (300);
}
print (300);

SymbolTable:
a -> 1
b -> 2
c -> 5

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
switch(a * 10)
case (b * c) 
{
print (a);
print (b);
}
case (10) 
{
print (100);
print (200);
}
default
{
print (300);
}
print (300);

SymbolTable:
a -> 1
b -> 2
c -> 5

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
print (a);
print (b);
print (300);

SymbolTable:
a -> 1
b -> 2
c -> 5

FileTable:

OutputTable:

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
print (a);
print (b);
print (300);

SymbolTable:
a -> 1
b -> 2
c -> 5

FileTable:

OutputTable:

Heap:

======== ThreadID: 1========
ExecutionStack:
print (b);
print (300);

SymbolTable:
a -> 1
b -> 2
c -> 5

FileTable:

OutputTable:
1

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
print (b);
print (300);

SymbolTable:
a -> 1
b -> 2
c -> 5

FileTable:

OutputTable:
1

Heap:

======== ThreadID: 1========
ExecutionStack:
print (300);

SymbolTable:
a -> 1
b -> 2
c -> 5

FileTable:

OutputTable:
1
2

Heap:

======== New step ========

======== ThreadID: 1========
ExecutionStack:
print (300);

SymbolTable:
a -> 1
b -> 2
c -> 5

FileTable:

OutputTable:
1
2

Heap:

======== ThreadID: 1========
ExecutionStack:

SymbolTable:
a -> 1
b -> 2
c -> 5

FileTable:

OutputTable:
1
2
300

Heap:
